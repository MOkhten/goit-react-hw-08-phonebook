{"version":3,"file":"static/js/78.3f7d1c53.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styles.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/redux/selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\nborder: 1px solid #1976d2;\nmin-width: 600px;\npadding: 20px 30px;`\n\nexport const FormTitle = styled.h2`\ncolor: #1976d2;\nfont-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\n    font-weight: 700;\n    font-size: 0.875rem;\n    line-height: 1.75;\n    letter-spacing: 0.02857em;\ndisplay: inline-flex;\nflex-wrap: wrap;`\n\nexport const Button = styled.button`\nwidth: 180px;\n  padding: 6px;\n  margin-top: 20px;\n  margin-left: 80px;\nbackground-color: lightblue;\ncolor: white;\nborder-radius: 2px;\nborder:none;\npadding: 5px;\ncursor: pointer;\n`\nexport const Input = styled.input`\ndisplay: flex;\n  justify-content: space-between;\n  width: 250px;\n  \n:hover,\n  :focus {\n    border-color: lightblue;\n    display: inline-flex;\n    color: #1976d2;\n  }`","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { Form, FormTitle, Input } from './ContactForm.styled';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'components/redux/contactsThunk';\n\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector((state) => state.contacts.contacts);\n   const dispatch = useDispatch(); \n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        throw new Error('Unexpected type of field');\n    }\n  };\n\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n  \n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is is already in contacts.`);\n    } else {\n    dispatch(\n        addContact({\n          name,\n          number,\n        })\n      );\n    \n      reset();\n    }\n  };\n  \n  \n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n                 <FormTitle>Name</FormTitle>\n                 <Input\n                    value={name}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    onChange={handleChange}\n          \n                    required />\n                <FormTitle>Number</FormTitle>\n                <Input\n                    value={number}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    onChange={handleChange}\n                    required />\n                <Button variant=\"contained\" type=\"submit\" >\n                    Add contact\n                </Button>\n            </Form>\n  )\n}","import styled from 'styled-components';\n\nexport const ItemInfo = styled.p`\ncolor: #1976d2;\nfont-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\n    font-weight: 500;\n    font-size: 0.875rem;\n    line-height: 1.75;\n    letter-spacing: 0.02857em;\nmargin-right: 20px;`\n\nexport const Button = styled.button`\npadding: 0px;\n width: 90px;\n height: 30px; \n margin-top:10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: cubic-bezier(0.075, 0.82, 0.165, 1) 3250ms;`","    import PropTypes from 'prop-types';\nimport { useDispatch} from 'react-redux';\nimport { ItemInfo } from '../ContactItem/ContactItem.styles';\nimport { deleteContact } from '../redux/contactsThunk';\nimport Button from '@mui/material/Button';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch(); \n  const onDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <ItemInfo>{name}</ItemInfo>\n      <ItemInfo>{number}</ItemInfo>\n      <Button variant=\"contained\"\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const ContactGroup = styled.ul`\nwidth: 412px;\npadding: 0px;\n`\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\n  width: 412px;\nmargin-top: 10px;\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n export const selectFilter = state => state.filter;\n\n\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return !filter\n      ? contacts\n      : contacts.filter(e =>\n          e.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  }\n);","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { ContactGroup, Item } from '../ContactList/ContactList.styled';\nimport { selectFilteredContacts, selectContacts } from \"components/redux/selector\";\n\nexport const ContactList = () => {\n   const filteredContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <ContactGroup >\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => {\n        return (\n          <Item  key={id}>\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n            />\n          </Item>\n        );\n      })}\n    </ContactGroup>\n  );\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\ncolor: #1976d2;\nfont-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\n    font-weight: 700;\n    font-size: 0.875rem;\n    line-height: 1.75;\n    letter-spacing: 0.02857em;\n\n`\n\nexport const Input = styled.input`\nmargin-left: 25px;\nwidth: 220px;`\n\nexport const Container = styled.div`\nmargin-top: 20px;`","import { Label, Input, Container } from '../Filter/Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'components/redux/filterSlice';\nimport { selectFilter } from 'components/redux/selector';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n  const onFilterChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n      <Container>\n        <Label > Find contacts by name:\n            <Input type=\"text\" value={filter} onChange={onFilterChange} />\n      </Label>\n      </Container>\n    )\n}"," import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\nreturn (\n        <div >\n<ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#4fa94d\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n        </div>\n    );\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\nimport { selectError, selectIsLoading } from 'components/redux/selector';\nimport { fetchContacts } from 'components/redux/contactsThunk';\n\nconst Contacts = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            {isLoading && !error && <Loader />}\n            {error && <p>{error}</p>}\n            {!isLoading && <ContactList />}\n        </>\n    );\n};\n\nexport default Contacts;"],"names":["Form","styled","FormTitle","Input","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","handleChange","e","currentTarget","value","Error","reset","onSubmit","preventDefault","find","contact","alert","addContact","type","pattern","title","onChange","required","Button","variant","ItemInfo","ContactItem","id","onClick","deleteContact","ContactGroup","Item","selectContacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","toLowerCase","includes","ContactList","filteredContacts","length","map","Label","Container","Filter","setFilter","target","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useEffect","fetchContacts"],"sourceRoot":""}