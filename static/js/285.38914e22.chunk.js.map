{"version":3,"file":"static/js/285.38914e22.chunk.js","mappings":"2XAgBMA,GAAQC,EAAAA,EAAAA,KAmGd,UAjGiB,WACb,IAAMC,EAAWC,EAAAA,GAkBjB,OACI,UAAC,IAAD,CAAeH,MAAOA,EAAtB,WACI,SAAC,KAAD,KACA,UAAC,IAAD,CACII,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALpB,WAQI,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACI,SAAC,IAAD,OAEJ,SAAC,IAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CAAKD,UAAU,OAAOE,SAlCb,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BC,EAAc,CAChBC,KAAMJ,EAAKK,IAAI,QACfC,MAAON,EAAKK,IAAI,SAChBE,SAAUP,EAAKK,IAAI,aAEvBnB,EAASsB,EAAAA,EAAAA,aAA4BL,IAChCM,SACAC,MAAK,WAAS,IACdC,OAAM,SAAAC,GAAQ,IACdC,UACLf,EAAMI,cAAcY,OAEvB,EAmByDC,YAAU,EAAC3B,GAAI,CAAE4B,GAAI,GAAnE,WACI,SAAC,IAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,aACNjB,KAAK,OACLkB,WAAS,KAEb,SAAC,IAAD,CACIL,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNjB,KAAK,QACLmB,aAAa,QACbD,WAAS,KAEb,SAAC,IAAD,CACIL,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTf,KAAK,WACLiB,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHG,aAAa,sBAEjB,SAAC,IAAD,CACIE,SAAS,SAAC,IAAD,CAAUC,MAAM,WAAWC,MAAM,YAC1CN,MAAM,iBAEV,SAAC,IAAD,CACIG,KAAK,SACLL,WAAS,EACTvB,QAAQ,YACRR,GAAI,CAAE4B,GAAI,EAAGY,GAAI,GAJrB,sBAQA,UAAC,KAAD,CAAMC,WAAS,EAAf,WACI,SAAC,KAAD,CAAMC,MAAI,EAACC,IAAE,EAAb,UACI,SAAC,IAAD,CAAMC,KAAK,IAAIpC,QAAQ,QAAvB,iCAIJ,SAAC,KAAD,CAAMkC,MAAI,EAAV,UACI,SAAC,IAAD,CAAME,KAAK,IAAIpC,QAAQ,QAAvB,SACK,gDAShC,C","sources":["pages/Register.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\n import CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../components/redux/auth';\n\nconst theme = createTheme();\n\nconst Register = () => {\n    const dispatch = useDispatch;\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const credentials = {\n            name: data.get('name'),\n            email: data.get('email'),\n            password: data.get('password'),\n        };\n        dispatch(authOperations.registerUser(credentials))\n            .unwrap()\n            .then(() => { })\n            .catch(e => { })\n            .finally();\n        event.currentTarget.reset();\n  \n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"First Name\"\n                        name=\"name\"\n                        autoFocus\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </ThemeProvider>\n   \n    );\n};\n\nexport default Register;"],"names":["theme","createTheme","dispatch","useDispatch","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","component","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","credentials","name","get","email","password","authOperations","unwrap","then","catch","e","finally","reset","noValidate","mt","margin","required","fullWidth","id","label","autoFocus","autoComplete","type","control","value","color","mb","container","item","xs","href"],"sourceRoot":""}